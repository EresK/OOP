/*
public class Main {
    public static void main(String[] args) throws Exception {
        Option add = new Option("add", true,"add new note");
        add.setArgs(2);

        Option rm = new Option("rm", true,"remove existing note");
        rm.setArgs(1);

        Option show = new Option("show", true,"shows appropriate notes");
        show.setOptionalArg(true);

        Options options = new Options();

        options.addOption(add);
        options.addOption(rm);
        options.addOption(show);

        NoteBook noteBook = new NoteBook();

        try {
            CommandLineParser parser = new DefaultParser();
            CommandLine cmd = parser.parse(options, args);

            String[] value;
            for (Option opt: cmd.getOptions()) {
                switch (opt.getOpt()) {
                    case "add":
                        value = cmd.getOptionValues("add");
                        noteBook.addNote(value);
                        break;

                    case "rm":
                        value = cmd.getOptionValues("rm");
                        noteBook.removeNote(value);
                        break;

                    case "show":
                        value = cmd.getOptionValues("show");
                        noteBook.showNotes(value);
                        break;
                }
            }
        }
        catch (ParseException e) {
            System.err.println("Parsing failed.  Reason: " + e.getMessage());
        }
    }
}
*/

/*import com.beust.jcommander.JCommander;

public class Main {
    public static void main(String[] args) {
        Parameters params = new Parameters();

        JCommander jcmd = new JCommander();
        jcmd.addObject(params);
        jcmd.parse(args);

    }
}*/